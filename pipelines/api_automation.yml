parameters:
  - name: awsRegion
    type: string
  - name: terraformS3StateBucket
    type: string
  - name: terraformS3StateFile
    type: string
  - name: terraformAwsCredentials
    type: string
  - name: extraTerraformParams
    type: object
    default: []
  - name: excludeFlag
    type: string
    default: "del"

stages:
  - stage: TerraformActions
    jobs:
      - job : TF
        steps:
          - task: TerraformTaskV1@0
            displayName: Terraform Init
            inputs:
              provider: "aws"
              command: "init"
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              backendServiceAWS: ${{ parameters.terraformAwsCredentials }}
              backendAWSBucketName: ${{ parameters.terraformS3StateBucket }}
              backendAWSKey: ${{ parameters.terraformS3StateFile }}

          - ${{ if ne(length(parameters.extraTerraformParams), 0) }}:
            - script: echo '${{ convertToJson(parameters.extraTerraformParams) }}' > $(System.DefaultWorkingDirectory)/terraform/terraform.tfvars.json
              displayName: "Create Json tfvars"

          - task: TerraformTaskV1@0
            displayName: Terraform Plan
            inputs:
              provider: 'aws'
              command: 'plan'
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              environmentServiceNameAWS: ${{ parameters.terraformAwsCredentials }}

          - task: TerraformTaskV1@0
            displayName: Terraform Apply
            inputs:
              provider: 'aws'
              command: 'apply'
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              environmentServiceNameAWS: ${{ parameters.terraformAwsCredentials }}

          - task: TerraformTaskV4@4
            displayName: Terraform RMS3
            condition: eq('${{ parameters.excludeFlag }}', 'del')
            inputs:
              provider: 'aws'
              command: 'custom'
              customCommand: 'state'
              commandOptions: 'rm aws_s3_bucket.assignmentBucket'
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              environmentServiceNameAWS: ${{ parameters.terraformAwsCredentials }}

          - task: TerraformTaskV1@0
            inputs:
              provider: 'aws'
              command: 'destroy'
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              environmentServiceNameAWS: ${{ parameters.terraformAwsCredentials }}